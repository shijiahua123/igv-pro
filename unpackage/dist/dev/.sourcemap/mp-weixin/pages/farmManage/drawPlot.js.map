{"version":3,"file":"drawPlot.js","sources":["pages/farmManage/drawPlot.vue","D:/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvZmFybU1hbmFnZS9kcmF3UGxvdC52dWU"],"sourcesContent":["<template>\r\n\t<view class=\"container\">\r\n\t\t<!-- 加载状态 -->\r\n\t\t<view v-if=\"isLoading\" class=\"loading-container\">\r\n\t\t\t<text>地图加载中...</text>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 错误提示 -->\r\n\t\t<view v-else-if=\"error\" class=\"error-container\">\r\n\t\t\t<text>{{ error }}</text>\r\n\t\t\t<button @tap=\"handleRetry\" class=\"retry-btn\">重试</button>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 地图组件 -->\r\n\t\t<map\r\n\t\t\tv-else\r\n\t\t\tid=\"map\"\r\n\t\t\tclass=\"map\"\r\n\t\t\t:latitude=\"latitude\"\r\n\t\t\t:longitude=\"longitude\"\r\n\t\t\t:markers=\"markers\"\r\n\t\t\t:polyline=\"polylines\"\r\n\t\t\t:polygons=\"polygons\"\r\n\t\t\t:scale=\"scale\"\r\n\t\t\t:enable-zoom=\"true\"\r\n\t\t\t:enable-scroll=\"true\"\r\n\t\t\t:enable-rotate=\"true\"\r\n\t\t\tshow-location\r\n\t\t\tshow-scale\r\n\t\t\t:satellite=\"mapType === 'satellite'\"\r\n\t\t\t:setting=\"mapSetting\"\r\n\t\t\t@regionchange=\"handleRegionChange\"\r\n\t\t\t@tap=\"handleMapTap\"\r\n\t\t\t@updated=\"handleMapUpdated\"\r\n\t\t\t@error=\"handleMapError\"\r\n\t\t\t@move=\"handleMapMove\"\r\n\t\t>\r\n\t\t\t<view class=\"map-crosshair\" v-if=\"isMarking\"></view>\r\n\t\t</map>\r\n\r\n\t\t<!-- 顶部工具栏 -->\r\n\t\t<view class=\"top-toolbar\">\r\n\t\t\t<view class=\"tool-box\" @tap=\"handleLayerClick\">\r\n\t\t\t\t<u-icon name=\"map\" size=\"20\"></u-icon>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"tool-box\">\r\n\t\t\t\t<u-icon name=\"cut\" size=\"20\"></u-icon>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 底部工具栏 -->\r\n\t\t<view class=\"bottom-toolbar\">\r\n\t\t\t<view class=\"tool-box\" @tap=\"handleUndo\" v-if=\"points.length > 0\">\r\n\t\t\t\t<text>撤销</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"tool-box\" @tap=\"toggleMarking\">\r\n\t\t\t\t<text>打点</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"tool-box\" @tap=\"handleSave\" v-if=\"points.length > 0\">\r\n\t\t\t\t<text>保存</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 面积信息 -->\r\n\t\t<view class=\"info-panel\" v-if=\"area > 0\">\r\n\t\t\t<text>面积: {{ formatArea(area) }}</text>\r\n\t\t\t<text>周长: {{ formatDistance(perimeter) }}</text>\r\n\t\t</view>\r\n\r\n\t\t<!-- 地图配置弹出层 -->\r\n\t\t<u-popup\r\n\t\t\t:show=\"showMapConfig\"\r\n\t\t\tmode=\"bottom\"\r\n\t\t\t:round=\"10\"\r\n\t\t\t:closeable=\"true\"\r\n\t\t\t:overlay=\"true\"\r\n\t\t\t:close-on-click-overlay=\"false\"\r\n\t\t\t:z-index=\"1000\"\r\n\t\t\t:safe-area-inset-bottom=\"true\"\r\n\t\t\t@close=\"closeMapConfig\"\r\n\t\t>\r\n\t\t\t<view class=\"popup-content\">\r\n\t\t\t\t<view class=\"popup-header\">\r\n\t\t\t\t\t<text class=\"popup-title\">图层设置</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t\r\n\t\t\t\t<view class=\"popup-body\">\r\n\t\t\t\t\t<!-- 地图类型 -->\r\n\t\t\t\t\t<view class=\"section\">\r\n\t\t\t\t\t\t<text class=\"section-title\">地图类型</text>\r\n\t\t\t\t\t\t<view class=\"radio-group\">\r\n\t\t\t\t\t\t\t<view \r\n\t\t\t\t\t\t\t\tclass=\"radio-item\" \r\n\t\t\t\t\t\t\t\t:class=\"{ active: mapType === 'standard' }\"\r\n\t\t\t\t\t\t\t\t@tap=\"handleMapTypeChange('standard')\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<text>标准地图</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view \r\n\t\t\t\t\t\t\t\tclass=\"radio-item\"\r\n\t\t\t\t\t\t\t\t:class=\"{ active: mapType === 'satellite' }\"\r\n\t\t\t\t\t\t\t\t@tap=\"handleMapTypeChange('satellite')\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<text>卫星地图</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 地图显示 -->\r\n\t\t\t\t\t<!-- <view class=\"section\">\r\n\t\t\t\t\t\t<text class=\"section-title\">地图显示</text>\r\n\t\t\t\t\t\t<view class=\"switch-list\">\r\n\t\t\t\t\t\t\t<view class=\"switch-item\" v-for=\"(item, index) in displayItems\" :key=\"index\">\r\n\t\t\t\t\t\t\t\t<text>{{ item.name }}</text>\r\n\t\t\t\t\t\t\t\t<switch \r\n\t\t\t\t\t\t\t\t\t:checked=\"item.checked\"\r\n\t\t\t\t\t\t\t\t\t@change=\"(e) => item.checked = e.detail.value\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"#0F40F5\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view> -->\r\n\r\n\t\t\t\t\t<!-- 扩展设备 -->\r\n\t\t\t\t\t<!-- <view class=\"section\">\r\n\t\t\t\t\t\t<text class=\"section-title\">扩展的输入设备</text>\r\n\t\t\t\t\t\t<view class=\"switch-list\">\r\n\t\t\t\t\t\t\t<view class=\"switch-item\" v-for=\"(item, index) in deviceItems\" :key=\"index\">\r\n\t\t\t\t\t\t\t\t<text>{{ item.name }}</text>\r\n\t\t\t\t\t\t\t\t<switch \r\n\t\t\t\t\t\t\t\t\t:checked=\"item.checked\"\r\n\t\t\t\t\t\t\t\t\t@change=\"(e) => item.checked = e.detail.value\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"#0F40F5\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view> -->\r\n\t\t\t\t</view>\r\n\r\n\t\t\t\t<view class=\"popup-footer\">\r\n\t\t\t\t\t<button class=\"confirm-btn\" @tap=\"handleConfigConfirm\">确定</button>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</u-popup>\r\n\t</view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\n\r\n// 加载状态\r\nconst isLoading = ref(true)\r\nconst error = ref('')\r\n\r\n// 图层配置显示状态\r\nconst showMapConfig = ref(false)\r\n\r\n// 地图中心点坐标\r\nconst latitude = ref(39.909)\r\nconst longitude = ref(116.397)\r\nconst scale = ref(14)\r\n\r\n// 打点模式\r\nconst isMarking = ref(false)\r\nconst points = ref([])\r\nconst area = ref(0)\r\nconst perimeter = ref(0)\r\n\r\n// 当前移动点的位置\r\nconst currentMovePoint = ref(null)\r\n\r\n// 地图设置\r\nconst mapSetting = {\r\n\tshowScale: true,        // 显示比例尺\r\n\tshowCompass: false,     // 隐藏指南针\r\n\tshowMapText: false,     // 不显示地图文字\r\n\tenableRotate: true,     // 支持地图旋转\r\n\tenableOverlooking: false,// 关闭俯视\r\n\tenableSatellite: false,  // 启用卫星图\r\n\tenableTraffic: false,   // 不显示路况\r\n\tenableBuilding: false,  // 不显示3D建筑物\r\n\tshowLogo: false        // 隐藏腾讯地图logo\r\n}\r\n\r\n// 地图配置相关\r\nconst mapType = ref('standard') // 地图类型：standard-标准地图，satellite-卫星地图\r\n\r\n// 地图类型选项\r\nconst mapTypes = ref([\r\n\t{ name: '标准地图', value: 'standard' },\r\n\t{ name: '卫星地图', value: 'satellite' }\r\n])\r\n\r\n// 修改显示项数据结构\r\nconst displayItems = ref([\r\n\t{ name: '灌溉阀', icon: '', checked: false },\r\n\t{ name: '地块', icon: '', checked: false },\r\n\t{ name: '施肥机', icon: '', checked: false },\r\n\t{ name: '灌溉组', icon: '', checked: false },\r\n\t{ name: '终端设备', icon: '', checked: false },\r\n\t{ name: '农场设备', icon: '', checked: false },\r\n\t{ name: '农业组机', icon: '', checked: false }\r\n])\r\n\r\n// 修改设备项数据结构\r\nconst deviceItems = ref([\r\n\t{ name: '压力计', icon: '', checked: false },\r\n\t{ name: '温度采集', icon: '', checked: false }\r\n])\r\n\r\n// 计算属性：标记点\r\nconst markers = computed(() => {\r\n\treturn points.value.map((point, index) => ({\r\n\t\tid: index + 1,\r\n\t\tlatitude: point.latitude,\r\n\t\tlongitude: point.longitude,\r\n\t\twidth: 24,\r\n\t\theight: 24,\r\n\t\tcallout: {\r\n\t\t\tcontent: '点' + (index + 1),\r\n\t\t\tdisplay: 'ALWAYS',\r\n\t\t\tfontSize: 12,\r\n\t\t\tborderRadius: 4,\r\n\t\t\tpadding: 4,\r\n\t\t\tbgColor: '#ffffff'\r\n\t\t}\r\n\t}))\r\n})\r\n\r\n// 计算属性：预览线\r\nconst previewLine = computed(() => {\r\n\tif (!isMarking.value || !currentMovePoint.value || points.value.length === 0) return []\r\n\t\r\n\treturn [{\r\n\t\tpoints: [\r\n\t\t\tpoints.value[points.value.length - 1],\r\n\t\t\tcurrentMovePoint.value\r\n\t\t],\r\n\t\tcolor: '#FFFFFF',\r\n\t\twidth: 2,\r\n\t\tdottedLine: true\r\n\t}]\r\n})\r\n\r\n// 计算属性：所有线段\r\nconst polylines = computed(() => {\r\n\tif (points.value.length < 2) return []\r\n\t\r\n\tconst lines = [{\r\n\t\tpoints: points.value,\r\n\t\tcolor: '#FFFFFF',\r\n\t\twidth: 2,\r\n\t\tdottedLine: false,\r\n\t\tarrowLine: false\r\n\t}]\r\n\t\r\n\t// 添加预览线\r\n\tif (previewLine.value.length > 0) {\r\n\t\tlines.push(...previewLine.value)\r\n\t}\r\n\t\r\n\treturn lines\r\n})\r\n\r\n// 计算属性：多边形\r\nconst polygons = computed(() => {\r\n\tif (points.value.length < 3) return []\r\n\treturn [{\r\n\t\tpoints: points.value,\r\n\t\tstrokeWidth: 2,\r\n\t\tstrokeColor: '#FF4500',\r\n\t\tfillColor: '#FF450033'\r\n\t}]\r\n})\r\n\r\n// 地图实例\r\nconst mapContext = ref(null)\r\n\r\n// 关闭配置面板\r\nconst closeMapConfig = () => {\r\n\tconsole.log('关闭图层')\r\n\tshowMapConfig.value = false\r\n\tuni.showTabBar()\r\n}\r\n\r\n// 切换地图类型\r\nconst handleMapTypeChange = (type) => {\r\n\tif (type !== 'standard' && type !== 'satellite') {\r\n\t\tuni.showToast({\r\n\t\t\ttitle: '不支持的地图类型',\r\n\t\t\ticon: 'none'\r\n\t\t})\r\n\t\treturn\r\n\t}\r\n\t\r\n\tmapType.value = type\r\n\t\r\n\t// 更新地图设置\r\n\t// mapSetting.enableSatellite = type === 'satellite'\r\n\t\r\n\t// uni.showToast({\r\n\t// \ttitle: type === 'standard' ? '已切换为标准地图' : '已切换为卫星地图',\r\n\t// \ticon: 'none'\r\n\t// })\r\n}\r\n\r\n// 确认配置\r\nconst handleConfigConfirm = () => {\r\n\t\t// 更新地图设置\r\n\tmapSetting.enableSatellite = mapType.value === 'satellite'\r\n\r\n\tcloseMapConfig()\r\n\t// 这里可以添加保存配置的逻辑\r\n\tuni.showToast({\r\n\t\ttitle: '设置已保存',\r\n\t\ticon: 'success'\r\n\t})\r\n\r\n\t// 显示底部导航栏\r\n\tuni.showTabBar()\r\n}\r\n\r\n// 切换打点模式\r\nconst toggleMarking = () => {\r\n\t// 切换打点状态\r\n\tisMarking.value = !isMarking.value\r\n\t\r\n\t// 如果关闭打点模式，清除当前移动点\r\n\tif (!isMarking.value) {\r\n\t\tcurrentMovePoint.value = null\r\n\t}\r\n\t\r\n\t// 显示提示\r\n\tuni.showToast({\r\n\t\ttitle: isMarking.value ? '已开启打点模式' : '已关闭打点模式',\r\n\t\ticon: 'none'\r\n\t})\r\n}\r\n\r\n// 检查线段相交\r\nconst isLineIntersect = (p1, p2, p3, p4) => {\r\n\tconst denominator = ((p4.longitude - p3.longitude) * (p2.latitude - p1.latitude)) -\r\n\t\t((p4.latitude - p3.latitude) * (p2.longitude - p1.longitude))\r\n\t\r\n\tif (denominator === 0) return false\r\n\t\r\n\tconst ua = (((p4.latitude - p3.latitude) * (p1.longitude - p3.longitude)) -\r\n\t\t((p4.longitude - p3.longitude) * (p1.latitude - p3.latitude))) / denominator\r\n\tconst ub = (((p2.latitude - p1.latitude) * (p1.longitude - p3.longitude)) -\r\n\t\t((p2.longitude - p1.longitude) * (p1.latitude - p3.latitude))) / denominator\r\n\t\r\n\treturn (ua >= 0 && ua <= 1) && (ub >= 0 && ub <= 1)\r\n}\r\n\r\n// 检查新线段是否与已有线段相交\r\nconst checkLineIntersection = (newPoint) => {\r\n\tif (points.value.length < 2) return false\r\n\t\r\n\tconst lastPoint = points.value[points.value.length - 1]\r\n\t\r\n\t// 检查与除最后一条线段外的所有线段\r\n\tfor (let i = 0; i < points.value.length - 2; i++) {\r\n\t\tif (isLineIntersect(\r\n\t\t\tlastPoint,\r\n\t\t\tnewPoint,\r\n\t\t\tpoints.value[i],\r\n\t\t\tpoints.value[i + 1]\r\n\t\t)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn false\r\n}\r\n\r\n// 检查是否可以闭合多边形\r\nconst canClosePath = (point) => {\r\n\tif (points.value.length < 3) return false\r\n\t\r\n\tconst firstPoint = points.value[0]\r\n\tconst lastPoint = points.value[points.value.length - 1]\r\n\t\r\n\t// 计算与起点的距离（米）\r\n\tconst distanceToStart = calculateDistance(\r\n\t\tpoint.latitude,\r\n\t\tpoint.longitude,\r\n\t\tfirstPoint.latitude,\r\n\t\tfirstPoint.longitude\r\n\t)\r\n\t\r\n\t// 如果距离起点小于10米，认为可以闭合\r\n\treturn distanceToStart < 10\r\n}\r\n\r\n// 计算点到线段的距离\r\nconst pointToLineDistance = (point, lineStart, lineEnd) => {\r\n\t// 如果线段起点和终点重合，直接返回点到起点的距离\r\n\tif (lineStart.latitude === lineEnd.latitude && lineStart.longitude === lineEnd.longitude) {\r\n\t\treturn calculateDistance(\r\n\t\t\tpoint.latitude,\r\n\t\t\tpoint.longitude,\r\n\t\t\tlineStart.latitude,\r\n\t\t\tlineStart.longitude\r\n\t\t)\r\n\t}\r\n\t\r\n\t// 计算线段长度的平方\r\n\tconst lineLength = calculateDistance(\r\n\t\tlineStart.latitude,\r\n\t\tlineStart.longitude,\r\n\t\tlineEnd.latitude,\r\n\t\tlineEnd.longitude\r\n\t)\r\n\t\r\n\t// 计算点到线段的投影位置\r\n\tconst t = ((point.longitude - lineStart.longitude) * (lineEnd.longitude - lineStart.longitude) +\r\n\t\t(point.latitude - lineStart.latitude) * (lineEnd.latitude - lineStart.latitude)) /\r\n\t\t(Math.pow(lineEnd.longitude - lineStart.longitude, 2) + Math.pow(lineEnd.latitude - lineStart.latitude, 2))\r\n\t\r\n\t// 如果投影点在线段外部，返回到最近端点的距离\r\n\tif (t < 0) {\r\n\t\treturn calculateDistance(\r\n\t\t\tpoint.latitude,\r\n\t\t\tpoint.longitude,\r\n\t\t\tlineStart.latitude,\r\n\t\t\tlineStart.longitude\r\n\t\t)\r\n\t}\r\n\tif (t > 1) {\r\n\t\treturn calculateDistance(\r\n\t\t\tpoint.latitude,\r\n\t\t\tpoint.longitude,\r\n\t\t\tlineEnd.latitude,\r\n\t\t\tlineEnd.longitude\r\n\t\t)\r\n\t}\r\n\t\r\n\t// 计算投影点坐标\r\n\tconst projectionPoint = {\r\n\t\tlatitude: lineStart.latitude + t * (lineEnd.latitude - lineStart.latitude),\r\n\t\tlongitude: lineStart.longitude + t * (lineEnd.longitude - lineStart.longitude)\r\n\t}\r\n\t\r\n\t// 返回点到投影点的距离\r\n\treturn calculateDistance(\r\n\t\tpoint.latitude,\r\n\t\tpoint.longitude,\r\n\t\tprojectionPoint.latitude,\r\n\t\tprojectionPoint.longitude\r\n\t)\r\n}\r\n\r\n// 检查点是否太靠近任何线段\r\nconst isPointTooCloseToLines = (point) => {\r\n\tif (points.value.length < 2) return false\r\n\t\r\n\tconst MIN_DISTANCE = 5 // 最小允许距离（米）\r\n\t\r\n\t// 检查与所有线段的距离\r\n\tfor (let i = 0; i < points.value.length - 1; i++) {\r\n\t\tconst distance = pointToLineDistance(\r\n\t\t\tpoint,\r\n\t\t\tpoints.value[i],\r\n\t\t\tpoints.value[i + 1]\r\n\t\t)\r\n\t\t\r\n\t\tif (distance < MIN_DISTANCE) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn false\r\n}\r\n\r\n// 检查闭合线段是否与其他线段相交\r\nconst checkClosingLineIntersection = () => {\r\n\tif (points.value.length < 3) return false\r\n\t\r\n\tconst firstPoint = points.value[0]\r\n\tconst lastPoint = points.value[points.value.length - 1]\r\n\t\r\n\t// 检查与除首尾点外的所有线段\r\n\tfor (let i = 1; i < points.value.length - 2; i++) {\r\n\t\tif (isLineIntersect(\r\n\t\t\tlastPoint,\r\n\t\t\tfirstPoint,\r\n\t\t\tpoints.value[i],\r\n\t\t\tpoints.value[i + 1]\r\n\t\t)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn false\r\n}\r\n\r\n// 处理地图移动\r\nconst handleMapMove = (e) => {\r\n\tif (!isMarking.value || points.value.length === 0) return\r\n\t\r\n\t// 更新当前移动点的位置\r\n\tcurrentMovePoint.value = {\r\n\t\tlatitude: e.detail.latitude,\r\n\t\tlongitude: e.detail.longitude\r\n\t}\r\n}\r\n\r\n// 处理地图点击\r\nconst handleMapTap = (e) => {\r\n\tif (!isMarking.value) return\r\n\t\r\n\tconst newPoint = {\r\n\t\tlatitude: e.detail.latitude,\r\n\t\tlongitude: e.detail.longitude\r\n\t}\r\n\t\r\n\t// 检查是否可以闭合\r\n\tif (points.value.length >= 3 && canClosePath(newPoint)) {\r\n\t\t// 检查闭合线段是否会导致相交\r\n\t\tif (checkClosingLineIntersection()) {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '闭合线段不能与其他线段相交',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\t// 闭合多边形，使用第一个点作为终点\r\n\t\tpoints.value.push({...points.value[0]})\r\n\t\tcalculateAreaAndPerimeter()\r\n\t\tisMarking.value = false // 自动关闭打点模式\r\n\t\tcurrentMovePoint.value = null // 清除移动点\r\n\t\tuni.showToast({\r\n\t\t\ttitle: '多边形已闭合',\r\n\t\t\ticon: 'success'\r\n\t\t})\r\n\t\treturn\r\n\t}\r\n\t\r\n\t// 检查点是否太靠近任何线段\r\n\tif (isPointTooCloseToLines(newPoint)) {\r\n\t\tuni.showToast({\r\n\t\t\ttitle: '不能在线段上打点',\r\n\t\t\ticon: 'none'\r\n\t\t})\r\n\t\treturn\r\n\t}\r\n\t\r\n\t// 检查新线段是否与已有线段相交\r\n\tif (checkLineIntersection(newPoint)) {\r\n\t\tuni.showToast({\r\n\t\t\ttitle: '线段不能相交',\r\n\t\t\ticon: 'none'\r\n\t\t})\r\n\t\treturn\r\n\t}\r\n\t\r\n\t// 添加新的点\r\n\tpoints.value.push(newPoint)\r\n\t\r\n\t// 更新当前移动点的位置\r\n\tcurrentMovePoint.value = newPoint\r\n\t\r\n\t// 如果是多边形模式且有3个以上的点，计算面积\r\n\tif (points.value.length >= 3) {\r\n\t\tcalculateAreaAndPerimeter()\r\n\t}\r\n}\r\n\r\n// 计算两点之间的距离（米）\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n\tconst R = 6371000 // 地球半径（米）\r\n\tconst dLat = (lat2 - lat1) * Math.PI / 180\r\n\tconst dLon = (lon2 - lon1) * Math.PI / 180\r\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n\t\tMath.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\r\n\t\tMath.sin(dLon/2) * Math.sin(dLon/2)\r\n\tconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\r\n\treturn R * c\r\n}\r\n\r\n// 计算多边形面积和周长\r\nconst calculateAreaAndPerimeter = () => {\r\n\tconst pts = points.value\r\n\tif (pts.length < 3) return\r\n\r\n\t// 计算周长\r\n\tlet totalDistance = 0\r\n\tfor (let i = 0; i < pts.length; i++) {\r\n\t\tconst j = (i + 1) % pts.length\r\n\t\ttotalDistance += calculateDistance(\r\n\t\t\tpts[i].latitude,\r\n\t\t\tpts[i].longitude,\r\n\t\t\tpts[j].latitude,\r\n\t\t\tpts[j].longitude\r\n\t\t)\r\n\t}\r\n\tperimeter.value = totalDistance\r\n\r\n\t// 计算面积（使用球面多边形面积公式）\r\n\tlet totalArea = 0\r\n\tfor (let i = 0; i < pts.length; i++) {\r\n\t\tconst j = (i + 1) % pts.length\r\n\t\ttotalArea += (pts[j].longitude - pts[i].longitude) *\r\n\t\t\t(2 + Math.sin(pts[i].latitude * Math.PI / 180) +\r\n\t\t\t Math.sin(pts[j].latitude * Math.PI / 180))\r\n\t}\r\n\tarea.value = Math.abs(totalArea * 6378137 * 6378137 / 4)\r\n}\r\n\r\n// 格式化面积显示\r\nconst formatArea = (areaValue) => {\r\n\tif (areaValue < 1000000) {\r\n\t\treturn `${(areaValue).toFixed(2)} 平方米`\r\n\t} else {\r\n\t\treturn `${(areaValue / 1000000).toFixed(2)} 平方公里`\r\n\t}\r\n}\r\n\r\n// 格式化距离显示\r\nconst formatDistance = (distance) => {\r\n\tif (distance < 1000) {\r\n\t\treturn `${distance.toFixed(2)} 米`\r\n\t} else {\r\n\t\treturn `${(distance / 1000).toFixed(2)} 公里`\r\n\t}\r\n}\r\n\r\n// 撤销上一个点\r\nconst handleUndo = () => {\r\n\tif (points.value.length > 0) {\r\n\t\tpoints.value.pop()\r\n\t}\r\n}\r\n\r\n// 重新定位\r\nconst handleRelocate = async () => {\r\n\ttry {\r\n\t\t// 检查是否已有权限\r\n\t\tconst hasPermission = await checkPermission()\r\n\t\t\r\n\t\t// 如果没有权限，请求权限\r\n\t\tif (!hasPermission) {\r\n\t\t\tconst granted = await requestPermission()\r\n\t\t\tif (!granted) {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '需要位置权限才能使用',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// 如果地图实例不存在，初始化它\r\n\t\tif (!mapContext.value) {\r\n\t\t\tmapContext.value = uni.createMapContext('map')\r\n\t\t}\r\n\t\t\r\n\t\t// 使用moveToLocation方法移动到当前位置\r\n\t\tmapContext.value.moveToLocation({\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '已定位到当前位置',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tconsole.error('移动到当前位置失败：', err)\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '定位失败，请重试',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tconsole.error('重新定位失败：', err)\r\n\t\tuni.showToast({\r\n\t\t\ttitle: '定位失败，请重试',\r\n\t\t\ticon: 'none'\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// 搜索位置\r\nconst handleSearch = () => {\r\n\tuni.showToast({\r\n\t\ttitle: '搜索功能开发中',\r\n\t\ticon: 'none'\r\n\t})\r\n}\r\n\r\n// 保存标记\r\nconst handleSave = () => {\r\n\tif (points.value.length === 0) return\r\n\t\r\n\tconst markData = {\r\n\t\tpoints: points.value,\r\n\t\ttimestamp: Date.now()\r\n\t}\r\n\t\r\n\tconsole.log('保存标记数据：', markData)\r\n\tuni.showToast({\r\n\t\ttitle: '保存成功',\r\n\t\ticon: 'success'\r\n\t})\r\n\t\r\n\t// 清除当前标记\r\n\tpoints.value = []\r\n\tisMarking.value = false\r\n}\r\n\r\n// 检查权限状态\r\nconst checkPermission = () => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tuni.getSetting({\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.authSetting['scope.userLocation']) {\r\n\t\t\t\t\tresolve(true)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve(false)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tconsole.error('获取设置失败：', err)\r\n\t\t\t\treject(err)\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\n\r\n// 获取位置权限\r\nconst requestPermission = () => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tuni.authorize({\r\n\t\t\tscope: 'scope.userLocation',\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tresolve(true)\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tconsole.error('权限请求失败：', err)\r\n\t\t\t\t// 引导用户去设置页面开启\r\n\t\t\t\tuni.showModal({\r\n\t\t\t\t\ttitle: '需要位置权限',\r\n\t\t\t\t\tcontent: '请在小程序设置中开启位置权限',\r\n\t\t\t\t\tconfirmText: '去设置',\r\n\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\t\t\tuni.openSetting({\r\n\t\t\t\t\t\t\t\tsuccess: (settingRes) => {\r\n\t\t\t\t\t\t\t\t\tif (settingRes.authSetting['scope.userLocation']) {\r\n\t\t\t\t\t\t\t\t\t\tresolve(true)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tresolve(false)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresolve(false)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\n\r\n// 获取位置信息\r\nconst getLocationInfo = () => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tuni.getLocation({\r\n\t\t\ttype: 'gcj02',\r\n\t\t\tisHighAccuracy: true,\r\n\t\t\thighAccuracyExpireTime: 3000,\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tresolve(res)\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tconsole.error('获取位置失败：', err)\r\n\t\t\t\treject(err)\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\n\r\n// 获取当前位置\r\nconst getCurrentLocation = async () => {\r\n\ttry {\r\n\t\tisLoading.value = true\r\n\t\terror.value = ''\r\n\t\t\r\n\t\t// 检查是否已有权限\r\n\t\tconst hasPermission = await checkPermission()\r\n\t\t\r\n\t\t// 如果没有权限，请求权限\r\n\t\tif (!hasPermission) {\r\n\t\t\tconst granted = await requestPermission()\r\n\t\t\tif (!granted) {\r\n\t\t\t\terror.value = '需要位置权限才能使用'\r\n\t\t\t\tisLoading.value = false\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 获取位置\r\n\t\tconst location = await getLocationInfo()\r\n\t\t\r\n\t\t// 更新地图中心点和标记点\r\n\t\tlatitude.value = location.latitude\r\n\t\tlongitude.value = location.longitude\r\n\t\t\r\n\t\tisLoading.value = false\r\n\t} catch (err) {\r\n\t\tconsole.error('位置服务异常：', err)\r\n\t\terror.value = '获取位置失败，请检查定位服务是否开启'\r\n\t\tisLoading.value = false\r\n\t}\r\n}\r\n\r\n// 地图区域改变事件\r\nconst handleRegionChange = (e) => {\r\n\tconsole.log('地图区域改变', e)\r\n}\r\n\r\n// 地图更新事件\r\nconst handleMapUpdated = (e) => {\r\n\tconsole.log('地图更新完成', e)\r\n\tisLoading.value = false\r\n}\r\n\r\n// 地图错误事件\r\nconst handleMapError = (e) => {\r\n\tconsole.error('地图加载错误：', e)\r\n\terror.value = '地图加载失败，请检查网络连接'\r\n\tisLoading.value = false\r\n}\r\n\r\n// 重试按钮点击事件\r\nconst handleRetry = () => {\r\n\tgetCurrentLocation()\r\n}\r\n\r\n// 打开图层配置\r\nconst handleLayerClick = () => {\r\n\tconsole.log('点击图层按钮')\r\n\tshowMapConfig.value = true\r\n\r\n\t// 隐藏底部导航栏\r\n\tuni.hideTabBar()\r\n}\r\n\r\n// 页面加载时获取位置和初始化地图实例\r\nonMounted(() => {\r\n\tgetCurrentLocation()\r\n\t// 初始化地图实例\r\n\tmapContext.value = uni.createMapContext('map')\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.container {\r\n\twidth: 100%;\r\n\theight: 100vh;\r\n\tposition: relative;\r\n}\r\n\r\n.map {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t\r\n\t::v-deep .map-crosshair {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 40rpx;\r\n\t\theight: 40rpx;\r\n\t\tpointer-events: none;\r\n\t\t\r\n\t\t&::before,\r\n\t\t&::after {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\tbackground-color: #FFFFFF;\r\n\t\t}\r\n\t\t\r\n\t\t&::before {\r\n\t\t\ttop: 50%;\r\n\t\t\tleft: 0;\r\n\t\t\tright: 0;\r\n\t\t\theight: 2rpx;\r\n\t\t\ttransform: translateY(-50%);\r\n\t\t}\r\n\t\t\r\n\t\t&::after {\r\n\t\t\ttop: 0;\r\n\t\t\tbottom: 0;\r\n\t\t\tleft: 50%;\r\n\t\t\twidth: 2rpx;\r\n\t\t\ttransform: translateX(-50%);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.top-toolbar {\r\n\tposition: absolute;\r\n\ttop: 40rpx;\r\n\tright: 40rpx;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 10rpx;\r\n\t\r\n\t.tool-box {\r\n\t\twidth: 60rpx;\r\n\t\theight: 60rpx;\r\n\t\tbackground-color: #FFFFFF;\r\n\t\tborder-radius: 8rpx;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tbox-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.1);\r\n\t\t\r\n\t\ttext {\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #333333;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.bottom-toolbar {\r\n\tposition: absolute;\r\n\tbottom: 40rpx;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tgap: 40rpx;\r\n\r\n\t.tool-box {\r\n\t\twidth: 80rpx;\r\n\t\theight: 80rpx;\r\n\t\tbackground-color: #FFFFFF;\r\n\t\tborder-radius: 8rpx;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tbox-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.1);\r\n\t\t\r\n\t\ttext {\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #333333;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.loading-container {\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\ttext-align: center;\r\n}\r\n\r\n.error-container {\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\ttext-align: center;\r\n\t\r\n\t.retry-btn {\r\n\t\tmargin-top: 20rpx;\r\n\t\tpadding: 10rpx 30rpx;\r\n\t\tbackground-color: #0F40F5;\r\n\t\tcolor: #fff;\r\n\t\tborder-radius: 8rpx;\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n}\r\n\r\n.info-panel {\r\n\tposition: absolute;\r\n\ttop: 40rpx;\r\n\tleft: 50%;\r\n\ttransform: translateX(-50%);\r\n\tbackground-color: rgba(255, 255, 255, 0.9);\r\n\tpadding: 20rpx;\r\n\tborder-radius: 16rpx;\r\n\tbox-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.1);\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 10rpx;\r\n\tfont-size: 28rpx;\r\n}\r\n\r\n.popup-content {\r\n\theight: 80vh;\r\n\tbackground-color: #fff;\r\n\tpadding: 30rpx;\r\n\tpadding-bottom: 10rpx;\r\n\t// padding-bottom: calc(30rpx + constant(safe-area-inset-bottom));\r\n\t// padding-bottom: calc(30rpx + env(safe-area-inset-bottom));\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\t\r\n\t.popup-header {\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 30rpx;\r\n\t\t\r\n\t\t.popup-title {\r\n\t\t\tfont-size: 32rpx;\r\n\t\t\tfont-weight: 500;\r\n\t\t\tcolor: #333;\r\n\t\t}\r\n\t}\r\n\t\r\n\t.popup-body {\r\n\t\tflex: 1;\r\n\t\toverflow-y: auto;\r\n\t\t\r\n\t\t.section {\r\n\t\t\tmargin-bottom: 30rpx;\r\n\t\t\t\r\n\t\t\t.section-title {\r\n\t\t\t\tfont-size: 28rpx;\r\n\t\t\t\tcolor: #666;\r\n\t\t\t\tmargin-bottom: 20rpx;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.radio-group {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: 20rpx;\r\n\t\t\t\t\r\n\t\t\t\t.radio-item {\r\n\t\t\t\t\tflex: 1;\r\n\t\t\t\t\theight: 80rpx;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\tbackground: #F5F7FA;\r\n\t\t\t\t\tborder-radius: 8rpx;\r\n\t\t\t\t\tborder: 2rpx solid transparent;\r\n\t\t\t\t\t\r\n\t\t\t\t\t&.active {\r\n\t\t\t\t\t\tborder-color: #0F40F5;\r\n\t\t\t\t\t\tbackground: rgba(15, 64, 245, 0.05);\r\n\t\t\t\t\t\tcolor: #0F40F5;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext {\r\n\t\t\t\t\t\tfont-size: 28rpx;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.switch-list {\r\n\t\t\t\t.switch-item {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tpadding: 20rpx 0;\r\n\t\t\t\t\tborder-bottom: 2rpx solid #F5F7FA;\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext {\r\n\t\t\t\t\t\tfont-size: 28rpx;\r\n\t\t\t\t\t\tcolor: #333;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t.popup-footer {\r\n\t\tpadding-top: 20rpx;\r\n\t\tpadding-bottom: 10rpx;\r\n\t\t// padding-bottom: constant(safe-area-inset-bottom); /* 兼容 iOS < 11.2 */\r\n\t\t// padding-bottom: env(safe-area-inset-bottom); /* 兼容 iOS >= 11.2 */\r\n\t\tbackground-color: #fff;\r\n\t\t\r\n\t\t.confirm-btn {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 90rpx;\r\n\t\t\tline-height: 90rpx;\r\n\t\t\ttext-align: center;\r\n\t\t\tbackground: #0F40F5;\r\n\t\t\tcolor: #FFFFFF;\r\n\t\t\tfont-size: 32rpx;\r\n\t\t\tborder-radius: 45rpx;\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n","import MiniProgramPage from 'F:/igv-pro/pages/farmManage/drawPlot.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","uni","onMounted","MiniProgramPage"],"mappings":"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"}