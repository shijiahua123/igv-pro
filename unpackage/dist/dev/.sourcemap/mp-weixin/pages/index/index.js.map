{"version":3,"file":"index.js","sources":["pages/index/index.vue","D:/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 加载状态 -->\n\t\t<view v-if=\"isLoading\" class=\"loading-container\">\n\t\t\t<text>地图加载中...</text>\n\t\t</view>\n\t\t\n\t\t<!-- 错误提示 -->\n\t\t<view v-else-if=\"error\" class=\"error-container\">\n\t\t\t<text>{{ error }}</text>\n\t\t\t<button @tap=\"handleRetry\" class=\"retry-btn\">重试</button>\n\t\t</view>\n\t\t\n\t\t<!-- 地图组件 -->\n\t\t<map\n\t\t\tv-else\n\t\t\tid=\"map\"\n\t\t\tclass=\"map\"\n\t\t\t:latitude=\"latitude\"\n\t\t\t:longitude=\"longitude\"\n\t\t\t:markers=\"markers\"\n\t\t\t:polyline=\"polylines\"\n\t\t\t:polygons=\"polygons\"\n\t\t\t:scale=\"scale\"\n\t\t\t:enable-zoom=\"true\"\n\t\t\t:enable-scroll=\"true\"\n\t\t\t:enable-rotate=\"true\"\n\t\t\tshow-location\n\t\t\tshow-scale\n\t\t\t:satellite=\"mapType === 'satellite'\"\n\t\t\t:setting=\"mapSetting\"\n\t\t\t@regionchange=\"handleRegionChange\"\n\t\t\t@tap=\"handleMapTap\"\n\t\t\t@updated=\"handleMapUpdated\"\n\t\t\t@error=\"handleMapError\"\n\t\t\t@move=\"handleMapMove\"\n\t\t>\n\t\t\t<view class=\"map-crosshair\" v-if=\"isMarking\"></view>\n\t\t</map>\n\n\t\t<!-- 顶部工具栏 -->\n\t\t<view class=\"top-toolbar\">\n\t\t\t<view class=\"tool-box\" @tap=\"handleLayerClick\">\n\t\t\t\t<text>图层</text>\n\t\t\t</view>\n\t\t\t<view class=\"tool-box\" @tap=\"handleSearch\">\n\t\t\t\t<text>搜索</text>\n\t\t\t</view>\n\t\t\t<view class=\"tool-box\" @tap=\"handleRelocate\">\n\t\t\t\t<text>定位</text>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 底部工具栏 -->\n\t\t<view class=\"bottom-toolbar\">\n\t\t\t<view class=\"tool-box\" @tap=\"handleUndo\" v-if=\"points.length > 0\">\n\t\t\t\t<text>撤销</text>\n\t\t\t</view>\n\t\t\t<view class=\"tool-box\" @tap=\"toggleMarking\">\n\t\t\t\t<text>打点</text>\n\t\t\t</view>\n\t\t\t<view class=\"tool-box\" @tap=\"handleSave\" v-if=\"points.length > 0\">\n\t\t\t\t<text>保存</text>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 面积信息 -->\n\t\t<view class=\"info-panel\" v-if=\"area > 0\">\n\t\t\t<text>面积: {{ formatArea(area) }}</text>\n\t\t\t<text>周长: {{ formatDistance(perimeter) }}</text>\n\t\t</view>\n\n\t\t<!-- 地图配置弹出层 -->\n\t\t<u-popup\n\t\t\t:show=\"showMapConfig\"\n\t\t\tmode=\"bottom\"\n\t\t\t:round=\"10\"\n\t\t\t:closeable=\"true\"\n\t\t\t:overlay=\"true\"\n\t\t\t:close-on-click-overlay=\"false\"\n\t\t\t:z-index=\"1000\"\n\t\t\t:safe-area-inset-bottom=\"true\"\n\t\t\t@close=\"closeMapConfig\"\n\t\t>\n\t\t\t<view class=\"popup-content\">\n\t\t\t\t<view class=\"popup-header\">\n\t\t\t\t\t<text class=\"popup-title\">图层设置</text>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"popup-body\">\n\t\t\t\t\t<!-- 地图类型 -->\n\t\t\t\t\t<view class=\"section\">\n\t\t\t\t\t\t<text class=\"section-title\">地图类型</text>\n\t\t\t\t\t\t<view class=\"radio-group\">\n\t\t\t\t\t\t\t<view \n\t\t\t\t\t\t\t\tclass=\"radio-item\" \n\t\t\t\t\t\t\t\t:class=\"{ active: mapType === 'standard' }\"\n\t\t\t\t\t\t\t\t@tap=\"handleMapTypeChange('standard')\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<text>标准地图</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view \n\t\t\t\t\t\t\t\tclass=\"radio-item\"\n\t\t\t\t\t\t\t\t:class=\"{ active: mapType === 'satellite' }\"\n\t\t\t\t\t\t\t\t@tap=\"handleMapTypeChange('satellite')\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<text>卫星地图</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\n\t\t\t\t\t<!-- 地图显示 -->\n\t\t\t\t\t<!-- <view class=\"section\">\n\t\t\t\t\t\t<text class=\"section-title\">地图显示</text>\n\t\t\t\t\t\t<view class=\"switch-list\">\n\t\t\t\t\t\t\t<view class=\"switch-item\" v-for=\"(item, index) in displayItems\" :key=\"index\">\n\t\t\t\t\t\t\t\t<text>{{ item.name }}</text>\n\t\t\t\t\t\t\t\t<switch \n\t\t\t\t\t\t\t\t\t:checked=\"item.checked\"\n\t\t\t\t\t\t\t\t\t@change=\"(e) => item.checked = e.detail.value\"\n\t\t\t\t\t\t\t\t\tcolor=\"#0F40F5\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view> -->\n\n\t\t\t\t\t<!-- 扩展设备 -->\n\t\t\t\t\t<!-- <view class=\"section\">\n\t\t\t\t\t\t<text class=\"section-title\">扩展的输入设备</text>\n\t\t\t\t\t\t<view class=\"switch-list\">\n\t\t\t\t\t\t\t<view class=\"switch-item\" v-for=\"(item, index) in deviceItems\" :key=\"index\">\n\t\t\t\t\t\t\t\t<text>{{ item.name }}</text>\n\t\t\t\t\t\t\t\t<switch \n\t\t\t\t\t\t\t\t\t:checked=\"item.checked\"\n\t\t\t\t\t\t\t\t\t@change=\"(e) => item.checked = e.detail.value\"\n\t\t\t\t\t\t\t\t\tcolor=\"#0F40F5\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view> -->\n\t\t\t\t</view>\n\n\t\t\t\t<view class=\"popup-footer\">\n\t\t\t\t\t<button class=\"confirm-btn\" @tap=\"handleConfigConfirm\">确定</button>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</u-popup>\n\t</view>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\n\n// 加载状态\nconst isLoading = ref(true)\nconst error = ref('')\n\n// 图层配置显示状态\nconst showMapConfig = ref(false)\n\n// 地图中心点坐标\nconst latitude = ref(39.909)\nconst longitude = ref(116.397)\nconst scale = ref(14)\n\n// 打点模式\nconst isMarking = ref(false)\nconst points = ref([])\nconst area = ref(0)\nconst perimeter = ref(0)\n\n// 当前移动点的位置\nconst currentMovePoint = ref(null)\n\n// 地图设置\nconst mapSetting = {\n\tshowScale: true,        // 显示比例尺\n\tshowCompass: false,     // 隐藏指南针\n\tshowMapText: false,     // 不显示地图文字\n\tenableRotate: true,     // 支持地图旋转\n\tenableOverlooking: false,// 关闭俯视\n\tenableSatellite: false,  // 启用卫星图\n\tenableTraffic: false,   // 不显示路况\n\tenableBuilding: false,  // 不显示3D建筑物\n\tshowLogo: false        // 隐藏腾讯地图logo\n}\n\n// 地图配置相关\nconst mapType = ref('standard') // 地图类型：standard-标准地图，satellite-卫星地图\n\n// 地图类型选项\nconst mapTypes = ref([\n\t{ name: '标准地图', value: 'standard' },\n\t{ name: '卫星地图', value: 'satellite' }\n])\n\n// 修改显示项数据结构\nconst displayItems = ref([\n\t{ name: '灌溉阀', icon: '', checked: false },\n\t{ name: '地块', icon: '', checked: false },\n\t{ name: '施肥机', icon: '', checked: false },\n\t{ name: '灌溉组', icon: '', checked: false },\n\t{ name: '终端设备', icon: '', checked: false },\n\t{ name: '农场设备', icon: '', checked: false },\n\t{ name: '农业组机', icon: '', checked: false }\n])\n\n// 修改设备项数据结构\nconst deviceItems = ref([\n\t{ name: '压力计', icon: '', checked: false },\n\t{ name: '温度采集', icon: '', checked: false }\n])\n\n// 计算属性：标记点\nconst markers = computed(() => {\n\treturn points.value.map((point, index) => ({\n\t\tid: index + 1,\n\t\tlatitude: point.latitude,\n\t\tlongitude: point.longitude,\n\t\twidth: 24,\n\t\theight: 24,\n\t\tcallout: {\n\t\t\tcontent: '点' + (index + 1),\n\t\t\tdisplay: 'ALWAYS',\n\t\t\tfontSize: 12,\n\t\t\tborderRadius: 4,\n\t\t\tpadding: 4,\n\t\t\tbgColor: '#ffffff'\n\t\t}\n\t}))\n})\n\n// 计算属性：预览线\nconst previewLine = computed(() => {\n\tif (!isMarking.value || !currentMovePoint.value || points.value.length === 0) return []\n\t\n\treturn [{\n\t\tpoints: [\n\t\t\tpoints.value[points.value.length - 1],\n\t\t\tcurrentMovePoint.value\n\t\t],\n\t\tcolor: '#FFFFFF',\n\t\twidth: 2,\n\t\tdottedLine: true\n\t}]\n})\n\n// 计算属性：所有线段\nconst polylines = computed(() => {\n\tif (points.value.length < 2) return []\n\t\n\tconst lines = [{\n\t\tpoints: points.value,\n\t\tcolor: '#FFFFFF',\n\t\twidth: 2,\n\t\tdottedLine: false,\n\t\tarrowLine: false\n\t}]\n\t\n\t// 添加预览线\n\tif (previewLine.value.length > 0) {\n\t\tlines.push(...previewLine.value)\n\t}\n\t\n\treturn lines\n})\n\n// 计算属性：多边形\nconst polygons = computed(() => {\n\tif (points.value.length < 3) return []\n\treturn [{\n\t\tpoints: points.value,\n\t\tstrokeWidth: 2,\n\t\tstrokeColor: '#FF4500',\n\t\tfillColor: '#FF450033'\n\t}]\n})\n\n// 地图实例\nconst mapContext = ref(null)\n\n// 关闭配置面板\nconst closeMapConfig = () => {\n\tconsole.log('关闭图层')\n\tshowMapConfig.value = false\n\tuni.showTabBar()\n}\n\n// 切换地图类型\nconst handleMapTypeChange = (type) => {\n\tif (type !== 'standard' && type !== 'satellite') {\n\t\tuni.showToast({\n\t\t\ttitle: '不支持的地图类型',\n\t\t\ticon: 'none'\n\t\t})\n\t\treturn\n\t}\n\t\n\tmapType.value = type\n\t\n\t// 更新地图设置\n\t// mapSetting.enableSatellite = type === 'satellite'\n\t\n\t// uni.showToast({\n\t// \ttitle: type === 'standard' ? '已切换为标准地图' : '已切换为卫星地图',\n\t// \ticon: 'none'\n\t// })\n}\n\n// 确认配置\nconst handleConfigConfirm = () => {\n\t\t// 更新地图设置\n\tmapSetting.enableSatellite = mapType.value === 'satellite'\n\n\tcloseMapConfig()\n\t// 这里可以添加保存配置的逻辑\n\tuni.showToast({\n\t\ttitle: '设置已保存',\n\t\ticon: 'success'\n\t})\n\n\t// 显示底部导航栏\n\tuni.showTabBar()\n}\n\n// 切换打点模式\nconst toggleMarking = () => {\n\t// 切换打点状态\n\tisMarking.value = !isMarking.value\n\t\n\t// 如果关闭打点模式，清除当前移动点\n\tif (!isMarking.value) {\n\t\tcurrentMovePoint.value = null\n\t}\n\t\n\t// 显示提示\n\tuni.showToast({\n\t\ttitle: isMarking.value ? '已开启打点模式' : '已关闭打点模式',\n\t\ticon: 'none'\n\t})\n}\n\n// 检查线段相交\nconst isLineIntersect = (p1, p2, p3, p4) => {\n\tconst denominator = ((p4.longitude - p3.longitude) * (p2.latitude - p1.latitude)) -\n\t\t((p4.latitude - p3.latitude) * (p2.longitude - p1.longitude))\n\t\n\tif (denominator === 0) return false\n\t\n\tconst ua = (((p4.latitude - p3.latitude) * (p1.longitude - p3.longitude)) -\n\t\t((p4.longitude - p3.longitude) * (p1.latitude - p3.latitude))) / denominator\n\tconst ub = (((p2.latitude - p1.latitude) * (p1.longitude - p3.longitude)) -\n\t\t((p2.longitude - p1.longitude) * (p1.latitude - p3.latitude))) / denominator\n\t\n\treturn (ua >= 0 && ua <= 1) && (ub >= 0 && ub <= 1)\n}\n\n// 检查新线段是否与已有线段相交\nconst checkLineIntersection = (newPoint) => {\n\tif (points.value.length < 2) return false\n\t\n\tconst lastPoint = points.value[points.value.length - 1]\n\t\n\t// 检查与除最后一条线段外的所有线段\n\tfor (let i = 0; i < points.value.length - 2; i++) {\n\t\tif (isLineIntersect(\n\t\t\tlastPoint,\n\t\t\tnewPoint,\n\t\t\tpoints.value[i],\n\t\t\tpoints.value[i + 1]\n\t\t)) {\n\t\t\treturn true\n\t\t}\n\t}\n\t\n\treturn false\n}\n\n// 检查是否可以闭合多边形\nconst canClosePath = (point) => {\n\tif (points.value.length < 3) return false\n\t\n\tconst firstPoint = points.value[0]\n\tconst lastPoint = points.value[points.value.length - 1]\n\t\n\t// 计算与起点的距离（米）\n\tconst distanceToStart = calculateDistance(\n\t\tpoint.latitude,\n\t\tpoint.longitude,\n\t\tfirstPoint.latitude,\n\t\tfirstPoint.longitude\n\t)\n\t\n\t// 如果距离起点小于10米，认为可以闭合\n\treturn distanceToStart < 10\n}\n\n// 计算点到线段的距离\nconst pointToLineDistance = (point, lineStart, lineEnd) => {\n\t// 如果线段起点和终点重合，直接返回点到起点的距离\n\tif (lineStart.latitude === lineEnd.latitude && lineStart.longitude === lineEnd.longitude) {\n\t\treturn calculateDistance(\n\t\t\tpoint.latitude,\n\t\t\tpoint.longitude,\n\t\t\tlineStart.latitude,\n\t\t\tlineStart.longitude\n\t\t)\n\t}\n\t\n\t// 计算线段长度的平方\n\tconst lineLength = calculateDistance(\n\t\tlineStart.latitude,\n\t\tlineStart.longitude,\n\t\tlineEnd.latitude,\n\t\tlineEnd.longitude\n\t)\n\t\n\t// 计算点到线段的投影位置\n\tconst t = ((point.longitude - lineStart.longitude) * (lineEnd.longitude - lineStart.longitude) +\n\t\t(point.latitude - lineStart.latitude) * (lineEnd.latitude - lineStart.latitude)) /\n\t\t(Math.pow(lineEnd.longitude - lineStart.longitude, 2) + Math.pow(lineEnd.latitude - lineStart.latitude, 2))\n\t\n\t// 如果投影点在线段外部，返回到最近端点的距离\n\tif (t < 0) {\n\t\treturn calculateDistance(\n\t\t\tpoint.latitude,\n\t\t\tpoint.longitude,\n\t\t\tlineStart.latitude,\n\t\t\tlineStart.longitude\n\t\t)\n\t}\n\tif (t > 1) {\n\t\treturn calculateDistance(\n\t\t\tpoint.latitude,\n\t\t\tpoint.longitude,\n\t\t\tlineEnd.latitude,\n\t\t\tlineEnd.longitude\n\t\t)\n\t}\n\t\n\t// 计算投影点坐标\n\tconst projectionPoint = {\n\t\tlatitude: lineStart.latitude + t * (lineEnd.latitude - lineStart.latitude),\n\t\tlongitude: lineStart.longitude + t * (lineEnd.longitude - lineStart.longitude)\n\t}\n\t\n\t// 返回点到投影点的距离\n\treturn calculateDistance(\n\t\tpoint.latitude,\n\t\tpoint.longitude,\n\t\tprojectionPoint.latitude,\n\t\tprojectionPoint.longitude\n\t)\n}\n\n// 检查点是否太靠近任何线段\nconst isPointTooCloseToLines = (point) => {\n\tif (points.value.length < 2) return false\n\t\n\tconst MIN_DISTANCE = 5 // 最小允许距离（米）\n\t\n\t// 检查与所有线段的距离\n\tfor (let i = 0; i < points.value.length - 1; i++) {\n\t\tconst distance = pointToLineDistance(\n\t\t\tpoint,\n\t\t\tpoints.value[i],\n\t\t\tpoints.value[i + 1]\n\t\t)\n\t\t\n\t\tif (distance < MIN_DISTANCE) {\n\t\t\treturn true\n\t\t}\n\t}\n\t\n\treturn false\n}\n\n// 检查闭合线段是否与其他线段相交\nconst checkClosingLineIntersection = () => {\n\tif (points.value.length < 3) return false\n\t\n\tconst firstPoint = points.value[0]\n\tconst lastPoint = points.value[points.value.length - 1]\n\t\n\t// 检查与除首尾点外的所有线段\n\tfor (let i = 1; i < points.value.length - 2; i++) {\n\t\tif (isLineIntersect(\n\t\t\tlastPoint,\n\t\t\tfirstPoint,\n\t\t\tpoints.value[i],\n\t\t\tpoints.value[i + 1]\n\t\t)) {\n\t\t\treturn true\n\t\t}\n\t}\n\t\n\treturn false\n}\n\n// 处理地图移动\nconst handleMapMove = (e) => {\n\tif (!isMarking.value || points.value.length === 0) return\n\t\n\t// 更新当前移动点的位置\n\tcurrentMovePoint.value = {\n\t\tlatitude: e.detail.latitude,\n\t\tlongitude: e.detail.longitude\n\t}\n}\n\n// 处理地图点击\nconst handleMapTap = (e) => {\n\tif (!isMarking.value) return\n\t\n\tconst newPoint = {\n\t\tlatitude: e.detail.latitude,\n\t\tlongitude: e.detail.longitude\n\t}\n\t\n\t// 检查是否可以闭合\n\tif (points.value.length >= 3 && canClosePath(newPoint)) {\n\t\t// 检查闭合线段是否会导致相交\n\t\tif (checkClosingLineIntersection()) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '闭合线段不能与其他线段相交',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// 闭合多边形，使用第一个点作为终点\n\t\tpoints.value.push({...points.value[0]})\n\t\tcalculateAreaAndPerimeter()\n\t\tisMarking.value = false // 自动关闭打点模式\n\t\tcurrentMovePoint.value = null // 清除移动点\n\t\tuni.showToast({\n\t\t\ttitle: '多边形已闭合',\n\t\t\ticon: 'success'\n\t\t})\n\t\treturn\n\t}\n\t\n\t// 检查点是否太靠近任何线段\n\tif (isPointTooCloseToLines(newPoint)) {\n\t\tuni.showToast({\n\t\t\ttitle: '不能在线段上打点',\n\t\t\ticon: 'none'\n\t\t})\n\t\treturn\n\t}\n\t\n\t// 检查新线段是否与已有线段相交\n\tif (checkLineIntersection(newPoint)) {\n\t\tuni.showToast({\n\t\t\ttitle: '线段不能相交',\n\t\t\ticon: 'none'\n\t\t})\n\t\treturn\n\t}\n\t\n\t// 添加新的点\n\tpoints.value.push(newPoint)\n\t\n\t// 更新当前移动点的位置\n\tcurrentMovePoint.value = newPoint\n\t\n\t// 如果是多边形模式且有3个以上的点，计算面积\n\tif (points.value.length >= 3) {\n\t\tcalculateAreaAndPerimeter()\n\t}\n}\n\n// 计算两点之间的距离（米）\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n\tconst R = 6371000 // 地球半径（米）\n\tconst dLat = (lat2 - lat1) * Math.PI / 180\n\tconst dLon = (lon2 - lon1) * Math.PI / 180\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\n\t\tMath.sin(dLon/2) * Math.sin(dLon/2)\n\tconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\n\treturn R * c\n}\n\n// 计算多边形面积和周长\nconst calculateAreaAndPerimeter = () => {\n\tconst pts = points.value\n\tif (pts.length < 3) return\n\n\t// 计算周长\n\tlet totalDistance = 0\n\tfor (let i = 0; i < pts.length; i++) {\n\t\tconst j = (i + 1) % pts.length\n\t\ttotalDistance += calculateDistance(\n\t\t\tpts[i].latitude,\n\t\t\tpts[i].longitude,\n\t\t\tpts[j].latitude,\n\t\t\tpts[j].longitude\n\t\t)\n\t}\n\tperimeter.value = totalDistance\n\n\t// 计算面积（使用球面多边形面积公式）\n\tlet totalArea = 0\n\tfor (let i = 0; i < pts.length; i++) {\n\t\tconst j = (i + 1) % pts.length\n\t\ttotalArea += (pts[j].longitude - pts[i].longitude) *\n\t\t\t(2 + Math.sin(pts[i].latitude * Math.PI / 180) +\n\t\t\t Math.sin(pts[j].latitude * Math.PI / 180))\n\t}\n\tarea.value = Math.abs(totalArea * 6378137 * 6378137 / 4)\n}\n\n// 格式化面积显示\nconst formatArea = (areaValue) => {\n\tif (areaValue < 1000000) {\n\t\treturn `${(areaValue).toFixed(2)} 平方米`\n\t} else {\n\t\treturn `${(areaValue / 1000000).toFixed(2)} 平方公里`\n\t}\n}\n\n// 格式化距离显示\nconst formatDistance = (distance) => {\n\tif (distance < 1000) {\n\t\treturn `${distance.toFixed(2)} 米`\n\t} else {\n\t\treturn `${(distance / 1000).toFixed(2)} 公里`\n\t}\n}\n\n// 撤销上一个点\nconst handleUndo = () => {\n\tif (points.value.length > 0) {\n\t\tpoints.value.pop()\n\t}\n}\n\n// 重新定位\nconst handleRelocate = async () => {\n\ttry {\n\t\t// 检查是否已有权限\n\t\tconst hasPermission = await checkPermission()\n\t\t\n\t\t// 如果没有权限，请求权限\n\t\tif (!hasPermission) {\n\t\t\tconst granted = await requestPermission()\n\t\t\tif (!granted) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '需要位置权限才能使用',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 如果地图实例不存在，初始化它\n\t\tif (!mapContext.value) {\n\t\t\tmapContext.value = uni.createMapContext('map')\n\t\t}\n\t\t\n\t\t// 使用moveToLocation方法移动到当前位置\n\t\tmapContext.value.moveToLocation({\n\t\t\tsuccess: () => {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '已定位到当前位置',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('移动到当前位置失败：', err)\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '定位失败，请重试',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t} catch (err) {\n\t\tconsole.error('重新定位失败：', err)\n\t\tuni.showToast({\n\t\t\ttitle: '定位失败，请重试',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n}\n\n// 搜索位置\nconst handleSearch = () => {\n\tuni.showToast({\n\t\ttitle: '搜索功能开发中',\n\t\ticon: 'none'\n\t})\n}\n\n// 保存标记\nconst handleSave = () => {\n\tif (points.value.length === 0) return\n\t\n\tconst markData = {\n\t\tpoints: points.value,\n\t\ttimestamp: Date.now()\n\t}\n\t\n\tconsole.log('保存标记数据：', markData)\n\tuni.showToast({\n\t\ttitle: '保存成功',\n\t\ticon: 'success'\n\t})\n\t\n\t// 清除当前标记\n\tpoints.value = []\n\tisMarking.value = false\n}\n\n// 检查权限状态\nconst checkPermission = () => {\n\treturn new Promise((resolve, reject) => {\n\t\tuni.getSetting({\n\t\t\tsuccess: (res) => {\n\t\t\t\tif (res.authSetting['scope.userLocation']) {\n\t\t\t\t\tresolve(true)\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false)\n\t\t\t\t}\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('获取设置失败：', err)\n\t\t\t\treject(err)\n\t\t\t}\n\t\t})\n\t})\n}\n\n// 获取位置权限\nconst requestPermission = () => {\n\treturn new Promise((resolve, reject) => {\n\t\tuni.authorize({\n\t\t\tscope: 'scope.userLocation',\n\t\t\tsuccess: () => {\n\t\t\t\tresolve(true)\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('权限请求失败：', err)\n\t\t\t\t// 引导用户去设置页面开启\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '需要位置权限',\n\t\t\t\t\tcontent: '请在小程序设置中开启位置权限',\n\t\t\t\t\tconfirmText: '去设置',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tuni.openSetting({\n\t\t\t\t\t\t\t\tsuccess: (settingRes) => {\n\t\t\t\t\t\t\t\t\tif (settingRes.authSetting['scope.userLocation']) {\n\t\t\t\t\t\t\t\t\t\tresolve(true)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tresolve(false)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(false)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t})\n}\n\n// 获取位置信息\nconst getLocationInfo = () => {\n\treturn new Promise((resolve, reject) => {\n\t\tuni.getLocation({\n\t\t\ttype: 'gcj02',\n\t\t\tisHighAccuracy: true,\n\t\t\thighAccuracyExpireTime: 3000,\n\t\t\tsuccess: (res) => {\n\t\t\t\tresolve(res)\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('获取位置失败：', err)\n\t\t\t\treject(err)\n\t\t\t}\n\t\t})\n\t})\n}\n\n// 获取当前位置\nconst getCurrentLocation = async () => {\n\ttry {\n\t\tisLoading.value = true\n\t\terror.value = ''\n\t\t\n\t\t// 检查是否已有权限\n\t\tconst hasPermission = await checkPermission()\n\t\t\n\t\t// 如果没有权限，请求权限\n\t\tif (!hasPermission) {\n\t\t\tconst granted = await requestPermission()\n\t\t\tif (!granted) {\n\t\t\t\terror.value = '需要位置权限才能使用'\n\t\t\t\tisLoading.value = false\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\t// 获取位置\n\t\tconst location = await getLocationInfo()\n\t\t\n\t\t// 更新地图中心点和标记点\n\t\tlatitude.value = location.latitude\n\t\tlongitude.value = location.longitude\n\t\t\n\t\tisLoading.value = false\n\t} catch (err) {\n\t\tconsole.error('位置服务异常：', err)\n\t\terror.value = '获取位置失败，请检查定位服务是否开启'\n\t\tisLoading.value = false\n\t}\n}\n\n// 地图区域改变事件\nconst handleRegionChange = (e) => {\n\tconsole.log('地图区域改变', e)\n}\n\n// 地图更新事件\nconst handleMapUpdated = (e) => {\n\tconsole.log('地图更新完成', e)\n\tisLoading.value = false\n}\n\n// 地图错误事件\nconst handleMapError = (e) => {\n\tconsole.error('地图加载错误：', e)\n\terror.value = '地图加载失败，请检查网络连接'\n\tisLoading.value = false\n}\n\n// 重试按钮点击事件\nconst handleRetry = () => {\n\tgetCurrentLocation()\n}\n\n// 打开图层配置\nconst handleLayerClick = () => {\n\tconsole.log('点击图层按钮')\n\tshowMapConfig.value = true\n\n\t// 隐藏底部导航栏\n\tuni.hideTabBar()\n}\n\n// 页面加载时获取位置和初始化地图实例\nonMounted(() => {\n\tgetCurrentLocation()\n\t// 初始化地图实例\n\tmapContext.value = uni.createMapContext('map')\n})\n</script>\n\n<style lang=\"scss\">\n.container {\n\twidth: 100%;\n\theight: 100vh;\n\tposition: relative;\n}\n\n.map {\n\twidth: 100%;\n\theight: 100%;\n\t\n\t::v-deep .map-crosshair {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: 40rpx;\n\t\theight: 40rpx;\n\t\tpointer-events: none;\n\t\t\n\t\t&::before,\n\t\t&::after {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\tbackground-color: #FFFFFF;\n\t\t}\n\t\t\n\t\t&::before {\n\t\t\ttop: 50%;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\theight: 2rpx;\n\t\t\ttransform: translateY(-50%);\n\t\t}\n\t\t\n\t\t&::after {\n\t\t\ttop: 0;\n\t\t\tbottom: 0;\n\t\t\tleft: 50%;\n\t\t\twidth: 2rpx;\n\t\t\ttransform: translateX(-50%);\n\t\t}\n\t}\n}\n\n.top-toolbar {\n\tposition: absolute;\n\ttop: 40rpx;\n\tright: 40rpx;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 20rpx;\n\t\n\t.tool-box {\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tbackground-color: #FFFFFF;\n\t\tborder-radius: 8rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbox-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.1);\n\t\t\n\t\ttext {\n\t\t\tfont-size: 24rpx;\n\t\t\tcolor: #333333;\n\t\t}\n\t}\n}\n\n.bottom-toolbar {\n\tposition: absolute;\n\tbottom: 40rpx;\n\tleft: 0;\n\tright: 0;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 40rpx;\n\n\t.tool-box {\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tbackground-color: #FFFFFF;\n\t\tborder-radius: 8rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbox-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.1);\n\t\t\n\t\ttext {\n\t\t\tfont-size: 24rpx;\n\t\t\tcolor: #333333;\n\t\t}\n\t}\n}\n\n.loading-container {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\ttext-align: center;\n}\n\n.error-container {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\ttext-align: center;\n\t\n\t.retry-btn {\n\t\tmargin-top: 20rpx;\n\t\tpadding: 10rpx 30rpx;\n\t\tbackground-color: #0F40F5;\n\t\tcolor: #fff;\n\t\tborder-radius: 8rpx;\n\t\tfont-size: 28rpx;\n\t}\n}\n\n.info-panel {\n\tposition: absolute;\n\ttop: 40rpx;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tbackground-color: rgba(255, 255, 255, 0.9);\n\tpadding: 20rpx;\n\tborder-radius: 16rpx;\n\tbox-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.1);\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10rpx;\n\tfont-size: 28rpx;\n}\n\n.popup-content {\n\theight: 80vh;\n\tbackground-color: #fff;\n\tpadding: 30rpx;\n\tpadding-bottom: 10rpx;\n\t// padding-bottom: calc(30rpx + constant(safe-area-inset-bottom));\n\t// padding-bottom: calc(30rpx + env(safe-area-inset-bottom));\n\tdisplay: flex;\n\tflex-direction: column;\n\t\n\t.popup-header {\n\t\ttext-align: center;\n\t\tmargin-bottom: 30rpx;\n\t\t\n\t\t.popup-title {\n\t\t\tfont-size: 32rpx;\n\t\t\tfont-weight: 500;\n\t\t\tcolor: #333;\n\t\t}\n\t}\n\t\n\t.popup-body {\n\t\tflex: 1;\n\t\toverflow-y: auto;\n\t\t\n\t\t.section {\n\t\t\tmargin-bottom: 30rpx;\n\t\t\t\n\t\t\t.section-title {\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #666;\n\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t}\n\t\t\t\n\t\t\t.radio-group {\n\t\t\t\tdisplay: flex;\n\t\t\t\tgap: 20rpx;\n\t\t\t\t\n\t\t\t\t.radio-item {\n\t\t\t\t\tflex: 1;\n\t\t\t\t\theight: 80rpx;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tbackground: #F5F7FA;\n\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\tborder: 2rpx solid transparent;\n\t\t\t\t\t\n\t\t\t\t\t&.active {\n\t\t\t\t\t\tborder-color: #0F40F5;\n\t\t\t\t\t\tbackground: rgba(15, 64, 245, 0.05);\n\t\t\t\t\t\tcolor: #0F40F5;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttext {\n\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.switch-list {\n\t\t\t\t.switch-item {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tpadding: 20rpx 0;\n\t\t\t\t\tborder-bottom: 2rpx solid #F5F7FA;\n\t\t\t\t\t\n\t\t\t\t\ttext {\n\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\tcolor: #333;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t.popup-footer {\n\t\tpadding-top: 20rpx;\n\t\tpadding-bottom: 10rpx;\n\t\t// padding-bottom: constant(safe-area-inset-bottom); /* 兼容 iOS < 11.2 */\n\t\t// padding-bottom: env(safe-area-inset-bottom); /* 兼容 iOS >= 11.2 */\n\t\tbackground-color: #fff;\n\t\t\n\t\t.confirm-btn {\n\t\t\twidth: 100%;\n\t\t\theight: 90rpx;\n\t\t\tline-height: 90rpx;\n\t\t\ttext-align: center;\n\t\t\tbackground: #0F40F5;\n\t\t\tcolor: #FFFFFF;\n\t\t\tfont-size: 32rpx;\n\t\t\tborder-radius: 45rpx;\n\t\t}\n\t}\n}\n</style>\n","import MiniProgramPage from 'F:/igv-pro/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","uni","onMounted","MiniProgramPage"],"mappings":"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"}